"".main STEXT size=794 args=0x0 locals=0x88 funcid=0x0
	0x0000 00000 (main.go:7)	TEXT	"".main(SB), ABIInternal, $136-0
	0x0000 00000 (main.go:7)	MOVQ	TLS, CX
	0x0009 00009 (main.go:7)	PCDATA	$0, $-2
	0x0009 00009 (main.go:7)	MOVQ	(CX)(TLS*2), CX
	0x0010 00016 (main.go:7)	PCDATA	$0, $-1
	0x0010 00016 (main.go:7)	LEAQ	-8(SP), AX
	0x0015 00021 (main.go:7)	CMPQ	AX, 16(CX)
	0x0019 00025 (main.go:7)	PCDATA	$0, $-2
	0x0019 00025 (main.go:7)	JLS	784
	0x001f 00031 (main.go:7)	PCDATA	$0, $-1
	0x001f 00031 (main.go:7)	SUBQ	$136, SP
	0x0026 00038 (main.go:7)	MOVQ	BP, 128(SP)
	0x002e 00046 (main.go:7)	LEAQ	128(SP), BP
	0x0036 00054 (main.go:7)	FUNCDATA	$0, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0036 00054 (main.go:7)	FUNCDATA	$1, gclocals·56eee5aec0631e89284ae57d526af188(SB)
	0x0036 00054 (main.go:7)	FUNCDATA	$2, "".main.stkobj(SB)
	0x0036 00054 (main.go:8)	LEAQ	type.string(SB), AX
	0x003d 00061 (main.go:8)	MOVQ	AX, (SP)
	0x0041 00065 (main.go:8)	MOVQ	$1, 8(SP)
	0x004a 00074 (main.go:8)	MOVQ	$2, 16(SP)
	0x0053 00083 (main.go:8)	PCDATA	$1, $0
	0x0053 00083 (main.go:8)	CALL	runtime.makeslice(SB)
	0x0058 00088 (main.go:8)	MOVQ	24(SP), DI
	0x005d 00093 (main.go:8)	MOVQ	DI, "".s2+104(SP)
	0x0062 00098 (main.go:8)	MOVQ	$1, "".s2+112(SP)
	0x006b 00107 (main.go:8)	MOVQ	$2, "".s2+120(SP)
	0x0074 00116 (main.go:9)	MOVQ	$1, 8(DI)
	0x007c 00124 (main.go:9)	PCDATA	$0, $-2
	0x007c 00124 (main.go:9)	CMPL	runtime.writeBarrier(SB), $0
	0x0083 00131 (main.go:9)	JNE	747
	0x0089 00137 (main.go:9)	LEAQ	go.string."1"(SB), DX
	0x0090 00144 (main.go:9)	MOVQ	DX, (DI)
	0x0093 00147 (main.go:10)	PCDATA	$0, $-1
	0x0093 00147 (main.go:10)	MOVQ	"".s2+112(SP), DX
	0x0098 00152 (main.go:10)	MOVQ	"".s2+104(SP), BX
	0x009d 00157 (main.go:10)	MOVQ	"".s2+120(SP), SI
	0x00a2 00162 (<unknown line number>)	NOP
	0x00a2 00162 (main.go:23)	LEAQ	1(DX), R8
	0x00a6 00166 (main.go:23)	CMPQ	R8, SI
	0x00a9 00169 (main.go:23)	JHI	682
	0x00af 00175 (main.go:23)	SHLQ	$4, DX
	0x00b3 00179 (main.go:23)	MOVQ	$1, 8(BX)(DX*1)
	0x00bc 00188 (main.go:23)	LEAQ	(BX)(DX*1), DI
	0x00c0 00192 (main.go:23)	PCDATA	$0, $-2
	0x00c0 00192 (main.go:23)	CMPL	runtime.writeBarrier(SB), $0
	0x00c7 00199 (main.go:23)	JNE	665
	0x00cd 00205 (main.go:23)	LEAQ	go.string."3"(SB), SI
	0x00d4 00212 (main.go:23)	MOVQ	SI, (BX)(DX*1)
	0x00d8 00216 (main.go:24)	PCDATA	$0, $-1
	0x00d8 00216 (main.go:24)	NOP
	0x00e0 00224 (main.go:24)	TESTQ	R8, R8
	0x00e3 00227 (main.go:24)	JLS	773
	0x00e9 00233 (main.go:24)	MOVQ	$1, 8(BX)
	0x00f1 00241 (main.go:24)	PCDATA	$0, $-2
	0x00f1 00241 (main.go:24)	CMPL	runtime.writeBarrier(SB), $0
	0x00f8 00248 (main.go:24)	JNE	645
	0x00fe 00254 (main.go:24)	LEAQ	go.string."2"(SB), DX
	0x0105 00261 (main.go:24)	MOVQ	DX, (BX)
	0x0108 00264 (main.go:13)	PCDATA	$0, $-1
	0x0108 00264 (main.go:13)	PCDATA	$1, $-1
	0x0108 00264 (main.go:13)	XCHGL	AX, AX
	0x0109 00265 (main.go:19)	MOVQ	"".s2+112(SP), BX
	0x010e 00270 (main.go:19)	LEAQ	1(BX), R8
	0x0112 00274 (main.go:19)	MOVQ	"".s2+104(SP), R9
	0x0117 00279 (main.go:19)	MOVQ	"".s2+120(SP), R10
	0x011c 00284 (main.go:19)	NOP
	0x0120 00288 (main.go:19)	CMPQ	R10, R8
	0x0123 00291 (main.go:19)	JCS	565
	0x0129 00297 (main.go:19)	LEAQ	1(BX), R8
	0x012d 00301 (main.go:19)	MOVQ	R8, "".s2+112(SP)
	0x0132 00306 (main.go:19)	SHLQ	$4, BX
	0x0136 00310 (main.go:19)	MOVQ	$1, 8(R9)(BX*1)
	0x013f 00319 (main.go:19)	LEAQ	(R9)(BX*1), DI
	0x0143 00323 (main.go:19)	PCDATA	$0, $-2
	0x0143 00323 (main.go:19)	CMPL	runtime.writeBarrier(SB), $0
	0x014a 00330 (main.go:19)	JNE	555
	0x0150 00336 (main.go:19)	MOVQ	SI, (R9)(BX*1)
	0x0154 00340 (main.go:20)	PCDATA	$0, $-1
	0x0154 00340 (main.go:20)	MOVQ	"".s2+104(SP), DI
	0x0159 00345 (main.go:20)	MOVQ	"".s2+112(SP), CX
	0x015e 00350 (main.go:20)	NOP
	0x0160 00352 (main.go:20)	TESTQ	CX, CX
	0x0163 00355 (main.go:20)	JLS	764
	0x0169 00361 (main.go:20)	MOVQ	$1, 8(DI)
	0x0171 00369 (main.go:20)	PCDATA	$0, $-2
	0x0171 00369 (main.go:20)	CMPL	runtime.writeBarrier(SB), $0
	0x0178 00376 (main.go:20)	JNE	545
	0x017e 00382 (main.go:20)	MOVQ	DX, (DI)
	0x0181 00385 (main.go:15)	PCDATA	$0, $-1
	0x0181 00385 (main.go:15)	MOVQ	"".s2+104(SP), AX
	0x0186 00390 (main.go:15)	MOVQ	"".s2+112(SP), CX
	0x018b 00395 (main.go:15)	MOVQ	"".s2+120(SP), DX
	0x0190 00400 (main.go:15)	MOVQ	AX, (SP)
	0x0194 00404 (main.go:15)	MOVQ	CX, 8(SP)
	0x0199 00409 (main.go:15)	MOVQ	DX, 16(SP)
	0x019e 00414 (main.go:15)	PCDATA	$1, $0
	0x019e 00414 (main.go:15)	NOP
	0x01a0 00416 (main.go:15)	CALL	runtime.convTslice(SB)
	0x01a5 00421 (main.go:15)	MOVQ	24(SP), AX
	0x01aa 00426 (main.go:15)	XORPS	X0, X0
	0x01ad 00429 (main.go:15)	MOVUPS	X0, ""..autotmp_19+88(SP)
	0x01b2 00434 (main.go:15)	LEAQ	type.[]string(SB), CX
	0x01b9 00441 (main.go:15)	MOVQ	CX, ""..autotmp_19+88(SP)
	0x01be 00446 (main.go:15)	MOVQ	AX, ""..autotmp_19+96(SP)
	0x01c3 00451 (<unknown line number>)	NOP
	0x01c3 00451 ($GOROOT\src\fmt\print.go:213)	MOVQ	os.Stdout(SB), AX
	0x01ca 00458 ($GOROOT\src\fmt\print.go:213)	LEAQ	go.itab.*os.File,io.Writer(SB), CX
	0x01d1 00465 ($GOROOT\src\fmt\print.go:213)	MOVQ	CX, (SP)
	0x01d5 00469 ($GOROOT\src\fmt\print.go:213)	MOVQ	AX, 8(SP)
	0x01da 00474 ($GOROOT\src\fmt\print.go:213)	LEAQ	go.string."s2=%v\n"(SB), AX
	0x01e1 00481 ($GOROOT\src\fmt\print.go:213)	MOVQ	AX, 16(SP)
	0x01e6 00486 ($GOROOT\src\fmt\print.go:213)	MOVQ	$6, 24(SP)
	0x01ef 00495 ($GOROOT\src\fmt\print.go:213)	LEAQ	""..autotmp_19+88(SP), AX
	0x01f4 00500 ($GOROOT\src\fmt\print.go:213)	MOVQ	AX, 32(SP)
	0x01f9 00505 ($GOROOT\src\fmt\print.go:213)	MOVQ	$1, 40(SP)
	0x0202 00514 ($GOROOT\src\fmt\print.go:213)	MOVQ	$1, 48(SP)
	0x020b 00523 ($GOROOT\src\fmt\print.go:213)	CALL	fmt.Fprintf(SB)
	0x0210 00528 (main.go:15)	MOVQ	128(SP), BP
	0x0218 00536 (main.go:15)	ADDQ	$136, SP
	0x021f 00543 (main.go:15)	NOP
	0x0220 00544 (main.go:15)	RET
	0x0221 00545 (main.go:20)	PCDATA	$0, $-2
	0x0221 00545 (main.go:20)	CALL	runtime.gcWriteBarrierDX(SB)
	0x0226 00550 (main.go:20)	JMP	385
	0x022b 00555 (main.go:19)	CALL	runtime.gcWriteBarrierSI(SB)
	0x0230 00560 (main.go:19)	JMP	340
	0x0235 00565 (main.go:19)	PCDATA	$0, $-1
	0x0235 00565 (main.go:19)	LEAQ	type.string(SB), AX
	0x023c 00572 (main.go:19)	MOVQ	AX, (SP)
	0x0240 00576 (main.go:19)	MOVQ	R9, 8(SP)
	0x0245 00581 (main.go:19)	MOVQ	BX, 16(SP)
	0x024a 00586 (main.go:19)	MOVQ	R10, 24(SP)
	0x024f 00591 (main.go:19)	MOVQ	R8, 32(SP)
	0x0254 00596 (main.go:19)	PCDATA	$1, $1
	0x0254 00596 (main.go:19)	CALL	runtime.growslice(SB)
	0x0259 00601 (main.go:19)	MOVQ	40(SP), R9
	0x025e 00606 (main.go:19)	MOVQ	48(SP), BX
	0x0263 00611 (main.go:19)	MOVQ	56(SP), AX
	0x0268 00616 (main.go:19)	MOVQ	AX, "".s2+120(SP)
	0x026d 00621 (main.go:19)	MOVQ	R9, "".s2+104(SP)
	0x0272 00626 (main.go:24)	LEAQ	go.string."2"(SB), DX
	0x0279 00633 (main.go:23)	LEAQ	go.string."3"(SB), SI
	0x0280 00640 (main.go:19)	JMP	297
	0x0285 00645 (main.go:24)	PCDATA	$0, $-2
	0x0285 00645 (main.go:24)	MOVQ	BX, DI
	0x0288 00648 (main.go:24)	LEAQ	go.string."2"(SB), DX
	0x028f 00655 (main.go:24)	CALL	runtime.gcWriteBarrierDX(SB)
	0x0294 00660 (main.go:24)	JMP	264
	0x0299 00665 (main.go:23)	LEAQ	go.string."3"(SB), SI
	0x02a0 00672 (main.go:23)	CALL	runtime.gcWriteBarrierSI(SB)
	0x02a5 00677 (main.go:23)	JMP	216
	0x02aa 00682 (main.go:10)	PCDATA	$0, $-1
	0x02aa 00682 (main.go:10)	MOVQ	DX, "".s.len+80(SP)
	0x02af 00687 (main.go:23)	LEAQ	type.string(SB), AX
	0x02b6 00694 (main.go:23)	MOVQ	AX, (SP)
	0x02ba 00698 (main.go:23)	MOVQ	BX, 8(SP)
	0x02bf 00703 (main.go:23)	MOVQ	DX, 16(SP)
	0x02c4 00708 (main.go:23)	MOVQ	SI, 24(SP)
	0x02c9 00713 (main.go:23)	MOVQ	R8, 32(SP)
	0x02ce 00718 (main.go:23)	CALL	runtime.growslice(SB)
	0x02d3 00723 (main.go:23)	MOVQ	40(SP), BX
	0x02d8 00728 (main.go:23)	MOVQ	48(SP), AX
	0x02dd 00733 (main.go:23)	LEAQ	1(AX), R8
	0x02e1 00737 (main.go:23)	MOVQ	"".s.len+80(SP), DX
	0x02e6 00742 (main.go:23)	JMP	175
	0x02eb 00747 (main.go:9)	PCDATA	$0, $-2
	0x02eb 00747 (main.go:9)	LEAQ	go.string."1"(SB), DX
	0x02f2 00754 (main.go:9)	CALL	runtime.gcWriteBarrierDX(SB)
	0x02f7 00759 (main.go:9)	JMP	147
	0x02fc 00764 (main.go:20)	PCDATA	$0, $-1
	0x02fc 00764 (main.go:20)	XORL	AX, AX
	0x02fe 00766 (main.go:20)	PCDATA	$1, $0
	0x02fe 00766 (main.go:20)	NOP
	0x0300 00768 (main.go:20)	CALL	runtime.panicIndex(SB)
	0x0305 00773 (main.go:24)	XORL	AX, AX
	0x0307 00775 (main.go:24)	MOVQ	R8, CX
	0x030a 00778 (main.go:24)	CALL	runtime.panicIndex(SB)
	0x030f 00783 (main.go:24)	XCHGL	AX, AX
	0x0310 00784 (main.go:24)	NOP
	0x0310 00784 (main.go:7)	PCDATA	$1, $-1
	0x0310 00784 (main.go:7)	PCDATA	$0, $-2
	0x0310 00784 (main.go:7)	CALL	runtime.morestack_noctxt(SB)
	0x0315 00789 (main.go:7)	PCDATA	$0, $-1
	0x0315 00789 (main.go:7)	JMP	0
	0x0000 65 48 8b 0c 25 28 00 00 00 48 8b 89 00 00 00 00  eH..%(...H......
	0x0010 48 8d 44 24 f8 48 3b 41 10 0f 86 f1 02 00 00 48  H.D$.H;A.......H
	0x0020 81 ec 88 00 00 00 48 89 ac 24 80 00 00 00 48 8d  ......H..$....H.
	0x0030 ac 24 80 00 00 00 48 8d 05 00 00 00 00 48 89 04  .$....H......H..
	0x0040 24 48 c7 44 24 08 01 00 00 00 48 c7 44 24 10 02  $H.D$.....H.D$..
	0x0050 00 00 00 e8 00 00 00 00 48 8b 7c 24 18 48 89 7c  ........H.|$.H.|
	0x0060 24 68 48 c7 44 24 70 01 00 00 00 48 c7 44 24 78  $hH.D$p....H.D$x
	0x0070 02 00 00 00 48 c7 47 08 01 00 00 00 83 3d 00 00  ....H.G......=..
	0x0080 00 00 00 0f 85 62 02 00 00 48 8d 15 00 00 00 00  .....b...H......
	0x0090 48 89 17 48 8b 54 24 70 48 8b 5c 24 68 48 8b 74  H..H.T$pH.\$hH.t
	0x00a0 24 78 4c 8d 42 01 49 39 f0 0f 87 fb 01 00 00 48  $xL.B.I9.......H
	0x00b0 c1 e2 04 48 c7 44 13 08 01 00 00 00 48 8d 3c 13  ...H.D......H.<.
	0x00c0 83 3d 00 00 00 00 00 0f 85 cc 01 00 00 48 8d 35  .=...........H.5
	0x00d0 00 00 00 00 48 89 34 13 0f 1f 84 00 00 00 00 00  ....H.4.........
	0x00e0 4d 85 c0 0f 86 1c 02 00 00 48 c7 43 08 01 00 00  M........H.C....
	0x00f0 00 83 3d 00 00 00 00 00 0f 85 87 01 00 00 48 8d  ..=...........H.
	0x0100 15 00 00 00 00 48 89 13 90 48 8b 5c 24 70 4c 8d  .....H...H.\$pL.
	0x0110 43 01 4c 8b 4c 24 68 4c 8b 54 24 78 0f 1f 40 00  C.L.L$hL.T$x..@.
	0x0120 4d 39 c2 0f 82 0c 01 00 00 4c 8d 43 01 4c 89 44  M9.......L.C.L.D
	0x0130 24 70 48 c1 e3 04 49 c7 44 19 08 01 00 00 00 49  $pH...I.D......I
	0x0140 8d 3c 19 83 3d 00 00 00 00 00 0f 85 db 00 00 00  .<..=...........
	0x0150 49 89 34 19 48 8b 7c 24 68 48 8b 4c 24 70 66 90  I.4.H.|$hH.L$pf.
	0x0160 48 85 c9 0f 86 93 01 00 00 48 c7 47 08 01 00 00  H........H.G....
	0x0170 00 83 3d 00 00 00 00 00 0f 85 a3 00 00 00 48 89  ..=...........H.
	0x0180 17 48 8b 44 24 68 48 8b 4c 24 70 48 8b 54 24 78  .H.D$hH.L$pH.T$x
	0x0190 48 89 04 24 48 89 4c 24 08 48 89 54 24 10 66 90  H..$H.L$.H.T$.f.
	0x01a0 e8 00 00 00 00 48 8b 44 24 18 0f 57 c0 0f 11 44  .....H.D$..W...D
	0x01b0 24 58 48 8d 0d 00 00 00 00 48 89 4c 24 58 48 89  $XH......H.L$XH.
	0x01c0 44 24 60 48 8b 05 00 00 00 00 48 8d 0d 00 00 00  D$`H......H.....
	0x01d0 00 48 89 0c 24 48 89 44 24 08 48 8d 05 00 00 00  .H..$H.D$.H.....
	0x01e0 00 48 89 44 24 10 48 c7 44 24 18 06 00 00 00 48  .H.D$.H.D$.....H
	0x01f0 8d 44 24 58 48 89 44 24 20 48 c7 44 24 28 01 00  .D$XH.D$ H.D$(..
	0x0200 00 00 48 c7 44 24 30 01 00 00 00 e8 00 00 00 00  ..H.D$0.........
	0x0210 48 8b ac 24 80 00 00 00 48 81 c4 88 00 00 00 90  H..$....H.......
	0x0220 c3 e8 00 00 00 00 e9 56 ff ff ff e8 00 00 00 00  .......V........
	0x0230 e9 1f ff ff ff 48 8d 05 00 00 00 00 48 89 04 24  .....H......H..$
	0x0240 4c 89 4c 24 08 48 89 5c 24 10 4c 89 54 24 18 4c  L.L$.H.\$.L.T$.L
	0x0250 89 44 24 20 e8 00 00 00 00 4c 8b 4c 24 28 48 8b  .D$ .....L.L$(H.
	0x0260 5c 24 30 48 8b 44 24 38 48 89 44 24 78 4c 89 4c  \$0H.D$8H.D$xL.L
	0x0270 24 68 48 8d 15 00 00 00 00 48 8d 35 00 00 00 00  $hH......H.5....
	0x0280 e9 a4 fe ff ff 48 89 df 48 8d 15 00 00 00 00 e8  .....H..H.......
	0x0290 00 00 00 00 e9 6f fe ff ff 48 8d 35 00 00 00 00  .....o...H.5....
	0x02a0 e8 00 00 00 00 e9 2e fe ff ff 48 89 54 24 50 48  ..........H.T$PH
	0x02b0 8d 05 00 00 00 00 48 89 04 24 48 89 5c 24 08 48  ......H..$H.\$.H
	0x02c0 89 54 24 10 48 89 74 24 18 4c 89 44 24 20 e8 00  .T$.H.t$.L.D$ ..
	0x02d0 00 00 00 48 8b 5c 24 28 48 8b 44 24 30 4c 8d 40  ...H.\$(H.D$0L.@
	0x02e0 01 48 8b 54 24 50 e9 c4 fd ff ff 48 8d 15 00 00  .H.T$P.....H....
	0x02f0 00 00 e8 00 00 00 00 e9 97 fd ff ff 31 c0 66 90  ............1.f.
	0x0300 e8 00 00 00 00 31 c0 4c 89 c1 e8 00 00 00 00 90  .....1.L........
	0x0310 e8 00 00 00 00 e9 e6 fc ff ff                    ..........
	rel 3+0 t=25 type.[]string+0
	rel 3+0 t=25 type.*os.File+0
	rel 12+4 t=17 TLS+0
	rel 57+4 t=16 type.string+0
	rel 84+4 t=8 runtime.makeslice+0
	rel 126+4 t=16 runtime.writeBarrier+-1
	rel 140+4 t=16 go.string."1"+0
	rel 194+4 t=16 runtime.writeBarrier+-1
	rel 208+4 t=16 go.string."3"+0
	rel 243+4 t=16 runtime.writeBarrier+-1
	rel 257+4 t=16 go.string."2"+0
	rel 325+4 t=16 runtime.writeBarrier+-1
	rel 371+4 t=16 runtime.writeBarrier+-1
	rel 417+4 t=8 runtime.convTslice+0
	rel 437+4 t=16 type.[]string+0
	rel 454+4 t=16 os.Stdout+0
	rel 461+4 t=16 go.itab.*os.File,io.Writer+0
	rel 477+4 t=16 go.string."s2=%v\n"+0
	rel 524+4 t=8 fmt.Fprintf+0
	rel 546+4 t=8 runtime.gcWriteBarrierDX+0
	rel 556+4 t=8 runtime.gcWriteBarrierSI+0
	rel 568+4 t=16 type.string+0
	rel 597+4 t=8 runtime.growslice+0
	rel 629+4 t=16 go.string."2"+0
	rel 636+4 t=16 go.string."3"+0
	rel 651+4 t=16 go.string."2"+0
	rel 656+4 t=8 runtime.gcWriteBarrierDX+0
	rel 668+4 t=16 go.string."3"+0
	rel 673+4 t=8 runtime.gcWriteBarrierSI+0
	rel 690+4 t=16 type.string+0
	rel 719+4 t=8 runtime.growslice+0
	rel 750+4 t=16 go.string."1"+0
	rel 755+4 t=8 runtime.gcWriteBarrierDX+0
	rel 769+4 t=8 runtime.panicIndex+0
	rel 779+4 t=8 runtime.panicIndex+0
	rel 785+4 t=8 runtime.morestack_noctxt+0
"".addValue1 STEXT size=313 args=0x18 locals=0x48 funcid=0x0
	0x0000 00000 (main.go:18)	TEXT	"".addValue1(SB), ABIInternal, $72-24
	0x0000 00000 (main.go:18)	MOVQ	TLS, CX
	0x0009 00009 (main.go:18)	PCDATA	$0, $-2
	0x0009 00009 (main.go:18)	MOVQ	(CX)(TLS*2), CX
	0x0010 00016 (main.go:18)	PCDATA	$0, $-1
	0x0010 00016 (main.go:18)	CMPQ	SP, 16(CX)
	0x0014 00020 (main.go:18)	PCDATA	$0, $-2
	0x0014 00020 (main.go:18)	JLS	303
	0x001a 00026 (main.go:18)	PCDATA	$0, $-1
	0x001a 00026 (main.go:18)	SUBQ	$72, SP
	0x001e 00030 (main.go:18)	MOVQ	BP, 64(SP)
	0x0023 00035 (main.go:18)	LEAQ	64(SP), BP
	0x0028 00040 (main.go:18)	FUNCDATA	$0, gclocals·dc9b0298814590ca3ffc3a889546fc8b(SB)
	0x0028 00040 (main.go:18)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0028 00040 (main.go:19)	MOVQ	"".s+80(SP), DX
	0x002d 00045 (main.go:19)	MOVQ	8(DX), BX
	0x0031 00049 (main.go:19)	MOVQ	(DX), SI
	0x0034 00052 (main.go:19)	MOVQ	16(DX), R8
	0x0038 00056 (main.go:19)	LEAQ	1(BX), R9
	0x003c 00060 (main.go:19)	NOP
	0x0040 00064 (main.go:19)	CMPQ	R8, R9
	0x0043 00067 (main.go:19)	JCS	200
	0x0049 00073 (main.go:19)	LEAQ	1(BX), R8
	0x004d 00077 (main.go:19)	MOVQ	R8, 8(DX)
	0x0051 00081 (main.go:19)	SHLQ	$4, BX
	0x0055 00085 (main.go:19)	MOVQ	"".value+96(SP), R8
	0x005a 00090 (main.go:19)	MOVQ	R8, 8(SI)(BX*1)
	0x005f 00095 (main.go:19)	LEAQ	(SI)(BX*1), DI
	0x0063 00099 (main.go:19)	PCDATA	$0, $-2
	0x0063 00099 (main.go:19)	CMPL	runtime.writeBarrier(SB), $0
	0x006a 00106 (main.go:19)	JNE	188
	0x006c 00108 (main.go:19)	MOVQ	"".value+88(SP), R8
	0x0071 00113 (main.go:19)	MOVQ	R8, (SI)(BX*1)
	0x0075 00117 (main.go:20)	PCDATA	$0, $-1
	0x0075 00117 (main.go:20)	MOVQ	(DX), DI
	0x0078 00120 (main.go:20)	MOVQ	8(DX), CX
	0x007c 00124 (main.go:20)	NOP
	0x0080 00128 (main.go:20)	TESTQ	CX, CX
	0x0083 00131 (main.go:20)	JLS	295
	0x0089 00137 (main.go:20)	MOVQ	$1, 8(DI)
	0x0091 00145 (main.go:20)	PCDATA	$0, $-2
	0x0091 00145 (main.go:20)	CMPL	runtime.writeBarrier(SB), $0
	0x0098 00152 (main.go:20)	JNE	174
	0x009a 00154 (main.go:20)	LEAQ	go.string."2"(SB), AX
	0x00a1 00161 (main.go:20)	MOVQ	AX, (DI)
	0x00a4 00164 (main.go:21)	PCDATA	$0, $-1
	0x00a4 00164 (main.go:21)	MOVQ	64(SP), BP
	0x00a9 00169 (main.go:21)	ADDQ	$72, SP
	0x00ad 00173 (main.go:21)	RET
	0x00ae 00174 (main.go:20)	PCDATA	$0, $-2
	0x00ae 00174 (main.go:20)	LEAQ	go.string."2"(SB), AX
	0x00b5 00181 (main.go:20)	CALL	runtime.gcWriteBarrier(SB)
	0x00ba 00186 (main.go:20)	JMP	164
	0x00bc 00188 (main.go:19)	MOVQ	"".value+88(SP), BX
	0x00c1 00193 (main.go:19)	CALL	runtime.gcWriteBarrierBX(SB)
	0x00c6 00198 (main.go:19)	JMP	117
	0x00c8 00200 (main.go:19)	PCDATA	$0, $-1
	0x00c8 00200 (main.go:19)	LEAQ	type.string(SB), AX
	0x00cf 00207 (main.go:19)	MOVQ	AX, (SP)
	0x00d3 00211 (main.go:19)	MOVQ	SI, 8(SP)
	0x00d8 00216 (main.go:19)	MOVQ	BX, 16(SP)
	0x00dd 00221 (main.go:19)	MOVQ	R8, 24(SP)
	0x00e2 00226 (main.go:19)	MOVQ	R9, 32(SP)
	0x00e7 00231 (main.go:19)	PCDATA	$1, $0
	0x00e7 00231 (main.go:19)	CALL	runtime.growslice(SB)
	0x00ec 00236 (main.go:19)	MOVQ	40(SP), AX
	0x00f1 00241 (main.go:19)	MOVQ	48(SP), CX
	0x00f6 00246 (main.go:19)	MOVQ	56(SP), DX
	0x00fb 00251 (main.go:19)	MOVQ	"".s+80(SP), DI
	0x0100 00256 (main.go:19)	MOVQ	DX, 16(DI)
	0x0104 00260 (main.go:19)	PCDATA	$0, $-2
	0x0104 00260 (main.go:19)	CMPL	runtime.writeBarrier(SB), $0
	0x010b 00267 (main.go:19)	JNE	286
	0x010d 00269 (main.go:19)	MOVQ	AX, (DI)
	0x0110 00272 (main.go:19)	PCDATA	$0, $-1
	0x0110 00272 (main.go:19)	MOVQ	DI, DX
	0x0113 00275 (main.go:19)	MOVQ	AX, SI
	0x0116 00278 (main.go:19)	MOVQ	CX, BX
	0x0119 00281 (main.go:19)	JMP	73
	0x011e 00286 (main.go:19)	PCDATA	$0, $-2
	0x011e 00286 (main.go:19)	NOP
	0x0120 00288 (main.go:19)	CALL	runtime.gcWriteBarrier(SB)
	0x0125 00293 (main.go:19)	JMP	272
	0x0127 00295 (main.go:20)	PCDATA	$0, $-1
	0x0127 00295 (main.go:20)	XORL	AX, AX
	0x0129 00297 (main.go:20)	PCDATA	$1, $1
	0x0129 00297 (main.go:20)	CALL	runtime.panicIndex(SB)
	0x012e 00302 (main.go:20)	XCHGL	AX, AX
	0x012f 00303 (main.go:20)	NOP
	0x012f 00303 (main.go:18)	PCDATA	$1, $-1
	0x012f 00303 (main.go:18)	PCDATA	$0, $-2
	0x012f 00303 (main.go:18)	CALL	runtime.morestack_noctxt(SB)
	0x0134 00308 (main.go:18)	PCDATA	$0, $-1
	0x0134 00308 (main.go:18)	JMP	0
	0x0000 65 48 8b 0c 25 28 00 00 00 48 8b 89 00 00 00 00  eH..%(...H......
	0x0010 48 3b 61 10 0f 86 15 01 00 00 48 83 ec 48 48 89  H;a.......H..HH.
	0x0020 6c 24 40 48 8d 6c 24 40 48 8b 54 24 50 48 8b 5a  l$@H.l$@H.T$PH.Z
	0x0030 08 48 8b 32 4c 8b 42 10 4c 8d 4b 01 0f 1f 40 00  .H.2L.B.L.K...@.
	0x0040 4d 39 c8 0f 82 7f 00 00 00 4c 8d 43 01 4c 89 42  M9.......L.C.L.B
	0x0050 08 48 c1 e3 04 4c 8b 44 24 60 4c 89 44 1e 08 48  .H...L.D$`L.D..H
	0x0060 8d 3c 1e 83 3d 00 00 00 00 00 75 50 4c 8b 44 24  .<..=.....uPL.D$
	0x0070 58 4c 89 04 1e 48 8b 3a 48 8b 4a 08 0f 1f 40 00  XL...H.:H.J...@.
	0x0080 48 85 c9 0f 86 9e 00 00 00 48 c7 47 08 01 00 00  H........H.G....
	0x0090 00 83 3d 00 00 00 00 00 75 14 48 8d 05 00 00 00  ..=.....u.H.....
	0x00a0 00 48 89 07 48 8b 6c 24 40 48 83 c4 48 c3 48 8d  .H..H.l$@H..H.H.
	0x00b0 05 00 00 00 00 e8 00 00 00 00 eb e8 48 8b 5c 24  ............H.\$
	0x00c0 58 e8 00 00 00 00 eb ad 48 8d 05 00 00 00 00 48  X.......H......H
	0x00d0 89 04 24 48 89 74 24 08 48 89 5c 24 10 4c 89 44  ..$H.t$.H.\$.L.D
	0x00e0 24 18 4c 89 4c 24 20 e8 00 00 00 00 48 8b 44 24  $.L.L$ .....H.D$
	0x00f0 28 48 8b 4c 24 30 48 8b 54 24 38 48 8b 7c 24 50  (H.L$0H.T$8H.|$P
	0x0100 48 89 57 10 83 3d 00 00 00 00 00 75 11 48 89 07  H.W..=.....u.H..
	0x0110 48 89 fa 48 89 c6 48 89 cb e9 2b ff ff ff 66 90  H..H..H...+...f.
	0x0120 e8 00 00 00 00 eb e9 31 c0 e8 00 00 00 00 90 e8  .......1........
	0x0130 00 00 00 00 e9 c7 fe ff ff                       .........
	rel 12+4 t=17 TLS+0
	rel 101+4 t=16 runtime.writeBarrier+-1
	rel 147+4 t=16 runtime.writeBarrier+-1
	rel 157+4 t=16 go.string."2"+0
	rel 177+4 t=16 go.string."2"+0
	rel 182+4 t=8 runtime.gcWriteBarrier+0
	rel 194+4 t=8 runtime.gcWriteBarrierBX+0
	rel 203+4 t=16 type.string+0
	rel 232+4 t=8 runtime.growslice+0
	rel 262+4 t=16 runtime.writeBarrier+-1
	rel 289+4 t=8 runtime.gcWriteBarrier+0
	rel 298+4 t=8 runtime.panicIndex+0
	rel 304+4 t=8 runtime.morestack_noctxt+0
"".addValue2 STEXT size=266 args=0x28 locals=0x48 funcid=0x0
	0x0000 00000 (main.go:22)	TEXT	"".addValue2(SB), ABIInternal, $72-40
	0x0000 00000 (main.go:22)	MOVQ	TLS, CX
	0x0009 00009 (main.go:22)	PCDATA	$0, $-2
	0x0009 00009 (main.go:22)	MOVQ	(CX)(TLS*2), CX
	0x0010 00016 (main.go:22)	PCDATA	$0, $-1
	0x0010 00016 (main.go:22)	CMPQ	SP, 16(CX)
	0x0014 00020 (main.go:22)	PCDATA	$0, $-2
	0x0014 00020 (main.go:22)	JLS	256
	0x001a 00026 (main.go:22)	PCDATA	$0, $-1
	0x001a 00026 (main.go:22)	SUBQ	$72, SP
	0x001e 00030 (main.go:22)	MOVQ	BP, 64(SP)
	0x0023 00035 (main.go:22)	LEAQ	64(SP), BP
	0x0028 00040 (main.go:22)	FUNCDATA	$0, gclocals·385b9fcf304627fb2d5e79f269b14707(SB)
	0x0028 00040 (main.go:22)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0028 00040 (main.go:23)	MOVQ	"".s+88(SP), DX
	0x002d 00045 (main.go:23)	LEAQ	1(DX), BX
	0x0031 00049 (main.go:23)	MOVQ	"".s+96(SP), SI
	0x0036 00054 (main.go:23)	CMPQ	SI, BX
	0x0039 00057 (main.go:23)	JCS	179
	0x003b 00059 (main.go:23)	MOVQ	"".s+80(SP), AX
	0x0040 00064 (main.go:23)	SHLQ	$4, DX
	0x0044 00068 (main.go:23)	MOVQ	"".value+112(SP), SI
	0x0049 00073 (main.go:23)	MOVQ	SI, 8(AX)(DX*1)
	0x004e 00078 (main.go:23)	LEAQ	(AX)(DX*1), DI
	0x0052 00082 (main.go:23)	PCDATA	$0, $-2
	0x0052 00082 (main.go:23)	CMPL	runtime.writeBarrier(SB), $0
	0x0059 00089 (main.go:23)	JNE	167
	0x005b 00091 (main.go:23)	MOVQ	"".value+104(SP), SI
	0x0060 00096 (main.go:23)	MOVQ	SI, (AX)(DX*1)
	0x0064 00100 (main.go:24)	PCDATA	$0, $-1
	0x0064 00100 (main.go:24)	TESTQ	BX, BX
	0x0067 00103 (main.go:24)	JLS	244
	0x006d 00109 (main.go:24)	MOVQ	$1, 8(AX)
	0x0075 00117 (main.go:24)	PCDATA	$0, $-2
	0x0075 00117 (main.go:24)	CMPL	runtime.writeBarrier(SB), $0
	0x007c 00124 (main.go:24)	JNE	146
	0x007e 00126 (main.go:24)	LEAQ	go.string."2"(SB), CX
	0x0085 00133 (main.go:24)	MOVQ	CX, (AX)
	0x0088 00136 (main.go:25)	PCDATA	$0, $-1
	0x0088 00136 (main.go:25)	MOVQ	64(SP), BP
	0x008d 00141 (main.go:25)	ADDQ	$72, SP
	0x0091 00145 (main.go:25)	RET
	0x0092 00146 (main.go:24)	PCDATA	$0, $-2
	0x0092 00146 (main.go:24)	MOVQ	AX, DI
	0x0095 00149 (main.go:24)	LEAQ	go.string."2"(SB), CX
	0x009c 00156 (main.go:24)	NOP
	0x00a0 00160 (main.go:24)	CALL	runtime.gcWriteBarrierCX(SB)
	0x00a5 00165 (main.go:24)	JMP	136
	0x00a7 00167 (main.go:23)	MOVQ	"".value+104(SP), DX
	0x00ac 00172 (main.go:23)	CALL	runtime.gcWriteBarrierDX(SB)
	0x00b1 00177 (main.go:23)	JMP	100
	0x00b3 00179 (main.go:23)	PCDATA	$0, $-1
	0x00b3 00179 (main.go:23)	LEAQ	type.string(SB), AX
	0x00ba 00186 (main.go:23)	MOVQ	AX, (SP)
	0x00be 00190 (main.go:23)	MOVQ	"".s+80(SP), AX
	0x00c3 00195 (main.go:23)	MOVQ	AX, 8(SP)
	0x00c8 00200 (main.go:23)	MOVQ	DX, 16(SP)
	0x00cd 00205 (main.go:23)	MOVQ	SI, 24(SP)
	0x00d2 00210 (main.go:23)	MOVQ	BX, 32(SP)
	0x00d7 00215 (main.go:23)	PCDATA	$1, $0
	0x00d7 00215 (main.go:23)	CALL	runtime.growslice(SB)
	0x00dc 00220 (main.go:23)	MOVQ	40(SP), AX
	0x00e1 00225 (main.go:23)	MOVQ	48(SP), CX
	0x00e6 00230 (main.go:23)	LEAQ	1(CX), BX
	0x00ea 00234 (main.go:23)	MOVQ	"".s+88(SP), DX
	0x00ef 00239 (main.go:23)	JMP	64
	0x00f4 00244 (main.go:24)	XORL	AX, AX
	0x00f6 00246 (main.go:24)	MOVQ	BX, CX
	0x00f9 00249 (main.go:24)	PCDATA	$1, $1
	0x00f9 00249 (main.go:24)	CALL	runtime.panicIndex(SB)
	0x00fe 00254 (main.go:24)	XCHGL	AX, AX
	0x00ff 00255 (main.go:24)	NOP
	0x00ff 00255 (main.go:22)	PCDATA	$1, $-1
	0x00ff 00255 (main.go:22)	PCDATA	$0, $-2
	0x00ff 00255 (main.go:22)	NOP
	0x0100 00256 (main.go:22)	CALL	runtime.morestack_noctxt(SB)
	0x0105 00261 (main.go:22)	PCDATA	$0, $-1
	0x0105 00261 (main.go:22)	JMP	0
	0x0000 65 48 8b 0c 25 28 00 00 00 48 8b 89 00 00 00 00  eH..%(...H......
	0x0010 48 3b 61 10 0f 86 e6 00 00 00 48 83 ec 48 48 89  H;a.......H..HH.
	0x0020 6c 24 40 48 8d 6c 24 40 48 8b 54 24 58 48 8d 5a  l$@H.l$@H.T$XH.Z
	0x0030 01 48 8b 74 24 60 48 39 de 72 78 48 8b 44 24 50  .H.t$`H9.rxH.D$P
	0x0040 48 c1 e2 04 48 8b 74 24 70 48 89 74 10 08 48 8d  H...H.t$pH.t..H.
	0x0050 3c 10 83 3d 00 00 00 00 00 75 4c 48 8b 74 24 68  <..=.....uLH.t$h
	0x0060 48 89 34 10 48 85 db 0f 86 87 00 00 00 48 c7 40  H.4.H........H.@
	0x0070 08 01 00 00 00 83 3d 00 00 00 00 00 75 14 48 8d  ......=.....u.H.
	0x0080 0d 00 00 00 00 48 89 08 48 8b 6c 24 40 48 83 c4  .....H..H.l$@H..
	0x0090 48 c3 48 89 c7 48 8d 0d 00 00 00 00 0f 1f 40 00  H.H..H........@.
	0x00a0 e8 00 00 00 00 eb e1 48 8b 54 24 68 e8 00 00 00  .......H.T$h....
	0x00b0 00 eb b1 48 8d 05 00 00 00 00 48 89 04 24 48 8b  ...H......H..$H.
	0x00c0 44 24 50 48 89 44 24 08 48 89 54 24 10 48 89 74  D$PH.D$.H.T$.H.t
	0x00d0 24 18 48 89 5c 24 20 e8 00 00 00 00 48 8b 44 24  $.H.\$ .....H.D$
	0x00e0 28 48 8b 4c 24 30 48 8d 59 01 48 8b 54 24 58 e9  (H.L$0H.Y.H.T$X.
	0x00f0 4c ff ff ff 31 c0 48 89 d9 e8 00 00 00 00 90 90  L...1.H.........
	0x0100 e8 00 00 00 00 e9 f6 fe ff ff                    ..........
	rel 12+4 t=17 TLS+0
	rel 84+4 t=16 runtime.writeBarrier+-1
	rel 119+4 t=16 runtime.writeBarrier+-1
	rel 129+4 t=16 go.string."2"+0
	rel 152+4 t=16 go.string."2"+0
	rel 161+4 t=8 runtime.gcWriteBarrierCX+0
	rel 173+4 t=8 runtime.gcWriteBarrierDX+0
	rel 182+4 t=16 type.string+0
	rel 216+4 t=8 runtime.growslice+0
	rel 250+4 t=8 runtime.panicIndex+0
	rel 257+4 t=8 runtime.morestack_noctxt+0
os.(*File).close STEXT dupok nosplit size=26 args=0x18 locals=0x0 funcid=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	os.(*File).close(SB), DUPOK|NOSPLIT|ABIInternal, $0-24
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$0, gclocals·e6397a44f8e1b6e77d0f200b4fba5269(SB)
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (<autogenerated>:1)	MOVQ	""..this+8(SP), AX
	0x0005 00005 (<autogenerated>:1)	MOVQ	(AX), AX
	0x0008 00008 (<autogenerated>:1)	MOVQ	AX, ""..this+8(SP)
	0x000d 00013 (<autogenerated>:1)	XORPS	X0, X0
	0x0010 00016 (<autogenerated>:1)	MOVUPS	X0, "".~r0+16(SP)
	0x0015 00021 (<autogenerated>:1)	JMP	os.(*file).close(SB)
	0x0000 48 8b 44 24 08 48 8b 00 48 89 44 24 08 0f 57 c0  H.D$.H..H.D$..W.
	0x0010 0f 11 44 24 10 e9 00 00 00 00                    ..D$......
	rel 22+4 t=8 os.(*file).close+0
os.(*File).isdir STEXT dupok nosplit size=23 args=0x10 locals=0x0 funcid=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	os.(*File).isdir(SB), DUPOK|NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (<autogenerated>:1)	MOVQ	""..this+8(SP), AX
	0x0005 00005 (<autogenerated>:1)	MOVQ	(AX), AX
	0x0008 00008 (<autogenerated>:1)	MOVQ	AX, ""..this+8(SP)
	0x000d 00013 (<autogenerated>:1)	MOVB	$0, "".~r0+16(SP)
	0x0012 00018 (<autogenerated>:1)	JMP	os.(*file).isdir(SB)
	0x0000 48 8b 44 24 08 48 8b 00 48 89 44 24 08 c6 44 24  H.D$.H..H.D$..D$
	0x0010 10 00 e9 00 00 00 00                             .......
	rel 19+4 t=8 os.(*file).isdir+0
go.cuinfo.packagename. SDWARFCUINFO dupok size=0
	0x0000 6d 61 69 6e                                      main
""..inittask SNOPTRDATA size=32
	0x0000 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 fmt..inittask+0
go.info."".addValue2$abstract SDWARFABSFCN dupok size=35
	0x0000 04 2e 61 64 64 56 61 6c 75 65 32 00 01 01 11 73  ..addValue2....s
	0x0010 00 00 00 00 00 00 11 76 61 6c 75 65 00 00 00 00  .......value....
	0x0020 00 00 00                                         ...
	rel 0+0 t=24 type.[]string+0
	rel 0+0 t=24 type.string+0
	rel 18+4 t=31 go.info.[]string+0
	rel 30+4 t=31 go.info.string+0
go.info."".addValue1$abstract SDWARFABSFCN dupok size=35
	0x0000 04 2e 61 64 64 56 61 6c 75 65 31 00 01 01 11 73  ..addValue1....s
	0x0010 00 00 00 00 00 00 11 76 61 6c 75 65 00 00 00 00  .......value....
	0x0020 00 00 00                                         ...
	rel 0+0 t=24 type.*[]string+0
	rel 0+0 t=24 type.string+0
	rel 18+4 t=31 go.info.*[]string+0
	rel 30+4 t=31 go.info.string+0
go.info.fmt.Printf$abstract SDWARFABSFCN dupok size=54
	0x0000 04 66 6d 74 2e 50 72 69 6e 74 66 00 01 01 11 66  .fmt.Printf....f
	0x0010 6f 72 6d 61 74 00 00 00 00 00 00 11 61 00 00 00  ormat.......a...
	0x0020 00 00 00 11 6e 00 01 00 00 00 00 11 65 72 72 00  ....n.......err.
	0x0030 01 00 00 00 00 00                                ......
	rel 0+0 t=24 type.[]interface {}+0
	rel 0+0 t=24 type.error+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.string+0
	rel 23+4 t=31 go.info.string+0
	rel 31+4 t=31 go.info.[]interface {}+0
	rel 39+4 t=31 go.info.int+0
	rel 49+4 t=31 go.info.error+0
go.string."1" SRODATA dupok size=1
	0x0000 31                                               1
go.string."3" SRODATA dupok size=1
	0x0000 33                                               3
go.string."2" SRODATA dupok size=1
	0x0000 32                                               2
go.string."s2=%v\n" SRODATA dupok size=6
	0x0000 73 32 3d 25 76 0a                                s2=%v.
runtime.memequal64·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.memequal64+0
runtime.gcbits.01 SRODATA dupok size=1
	0x0000 01                                               .
type..namedata.*[]string- SRODATA dupok size=12
	0x0000 00 00 09 2a 5b 5d 73 74 72 69 6e 67              ...*[]string
type.*[]string SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 92 22 76 84 08 08 08 36 00 00 00 00 00 00 00 00  ."v....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]string-+0
	rel 48+8 t=1 type.[]string+0
type.[]string SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 d3 a8 f3 0a 02 08 08 17 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]string-+0
	rel 44+4 t=6 type.*[]string+0
	rel 48+8 t=1 type.string+0
runtime.nilinterequal·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.nilinterequal+0
type..namedata.*interface {}- SRODATA dupok size=16
	0x0000 00 00 0d 2a 69 6e 74 65 72 66 61 63 65 20 7b 7d  ...*interface {}
type.*interface {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 4f 0f 96 9d 08 08 08 36 00 00 00 00 00 00 00 00  O......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*interface {}-+0
	rel 48+8 t=1 type.interface {}+0
runtime.gcbits.02 SRODATA dupok size=1
	0x0000 02                                               .
type.interface {} SRODATA dupok size=80
	0x0000 10 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0010 e7 57 a0 18 02 08 08 14 00 00 00 00 00 00 00 00  .W..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.nilinterequal·f+0
	rel 32+8 t=1 runtime.gcbits.02+0
	rel 40+4 t=5 type..namedata.*interface {}-+0
	rel 44+4 t=6 type.*interface {}+0
	rel 56+8 t=1 type.interface {}+80
type..namedata.*[]interface {}- SRODATA dupok size=18
	0x0000 00 00 0f 2a 5b 5d 69 6e 74 65 72 66 61 63 65 20  ...*[]interface 
	0x0010 7b 7d                                            {}
type.*[]interface {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f3 04 9a e7 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]interface {}-+0
	rel 48+8 t=1 type.[]interface {}+0
type.[]interface {} SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 70 93 ea 2f 02 08 08 17 00 00 00 00 00 00 00 00  p../............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]interface {}-+0
	rel 44+4 t=6 type.*[]interface {}+0
	rel 48+8 t=1 type.interface {}+0
type..namedata.*[1]interface {}- SRODATA dupok size=19
	0x0000 00 00 10 2a 5b 31 5d 69 6e 74 65 72 66 61 63 65  ...*[1]interface
	0x0010 20 7b 7d                                          {}
type.*[1]interface {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 bf 03 a8 35 08 08 08 36 00 00 00 00 00 00 00 00  ...5...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[1]interface {}-+0
	rel 48+8 t=1 type.[1]interface {}+0
type.[1]interface {} SRODATA dupok size=72
	0x0000 10 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0010 50 91 5b fa 02 08 08 11 00 00 00 00 00 00 00 00  P.[.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.nilinterequal·f+0
	rel 32+8 t=1 runtime.gcbits.02+0
	rel 40+4 t=5 type..namedata.*[1]interface {}-+0
	rel 44+4 t=6 type.*[1]interface {}+0
	rel 48+8 t=1 type.interface {}+0
	rel 56+8 t=1 type.[]interface {}+0
go.itab.*os.File,io.Writer SRODATA dupok size=32
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 44 b5 f3 33 00 00 00 00 00 00 00 00 00 00 00 00  D..3............
	rel 0+8 t=1 type.io.Writer+0
	rel 8+8 t=1 type.*os.File+0
	rel 24+8 t=1 os.(*File).Write+0
type..importpath.fmt. SRODATA dupok size=6
	0x0000 00 00 03 66 6d 74                                ...fmt
gclocals·69c1753bd5f81501d95132d08af04464 SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
gclocals·56eee5aec0631e89284ae57d526af188 SRODATA dupok size=10
	0x0000 02 00 00 00 05 00 00 00 00 04                    ..........
"".main.stkobj SRODATA static size=40
	0x0000 02 00 00 00 00 00 00 00 d8 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00 e8 ff ff ff ff ff ff ff  ................
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[1]interface {}+0
	rel 32+8 t=1 type.[]string+0
gclocals·dc9b0298814590ca3ffc3a889546fc8b SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 03 00                    ..........
gclocals·385b9fcf304627fb2d5e79f269b14707 SRODATA dupok size=10
	0x0000 02 00 00 00 04 00 00 00 09 00                    ..........
gclocals·e6397a44f8e1b6e77d0f200b4fba5269 SRODATA dupok size=10
	0x0000 02 00 00 00 03 00 00 00 01 00                    ..........
gclocals·1a65e721a2ccc325b382662e7ffee780 SRODATA dupok size=10
	0x0000 02 00 00 00 01 00 00 00 01 00                    ..........
